knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(survey)
library(plyr)
library(dplyr)
library(factoextra)
library(labelled)
library(memisc)
library(sjlabelled)
library(boot)
library(glmnet)
library(UpSetR)
library(naniar)
library(RColorBrewer)
library(jtools)
library(reshape2)
folder_path <- "~/Dropbox (Partners HealthCare)/Various_papers/2022_gender_measure"
# load the prepared dataset
dat <- readRDS(file.path(folder_path, "Data/20220831_data_with_miss.Rds"))
# Use only complete data in primary analysis
dat_cc <- dat[complete.cases(dat),]
# define train and test indices:
PSU_train <- sample(unique(dat_cc$PSU_ID),
size = ceiling(0.7*length(unique(dat_cc$PSU_ID))))
ID_train <- dat_cc$ID[which(dat_cc$PSU_ID %in% PSU_train)]
ID_test <- setdiff(dat_cc$ID, ID_train)
inds_train <- which(dat_cc$ID %in% ID_train)
inds_test <- which(dat_cc$ID %in% ID_test)
length(ID_train)
length(ID_test)
# define the model matrix for the primary index
X_primary <- model.matrix(Gender ~
Marital_status +
Income_level +
Employment_status +
Occupation +
Education +
Current_Health_insurance +
Language_pref +
SASH_LANG +
SASH_SOC +
ETHIS +
Years_in_US, dat_cc)[,-1]
X_secondary <- model.matrix(Gender ~
Marital_status +
Income_level +
Employment_status +
Occupation +
Education +
Current_Health_insurance +
Language_pref +
SASH_LANG +
SASH_SOC +
ETHIS +
Years_in_US +
STAI10 +
CESD, dat_cc)[,-1]
# primary index
set.seed(929)
cv_lasso_primary <- cv.glmnet(X_primary[inds_train,], dat_cc$Gender[inds_train], alpha = 1, family = "binomial", nfolds = 5)
# use the lambda that resulted in minimum CVM to refit the model
set.seed(929)
lasso_model_primary <- glmnet(X_primary[inds_train,],
dat_cc$Gender[inds_train],
family = "binomial",
alpha = 1,
lambda = cv_lasso_primary$lambda.min)
primary_index_test <- lasso_model_primary %>% predict(newx = X_primary[inds_test,])
# secondary index
cv_lasso_secondary <- cv.glmnet(X_secondary[inds_train,],
dat_cc$Gender[inds_train],
alpha = 1,
family = "binomial",
nfolds = 5)
# use the lambda that resulted in minimum CVM to refit the model
set.seed(929)
lasso_model_secondary <- glmnet(X_secondary[inds_train,],
dat_cc$Gender[inds_train],
family = "binomial",
alpha = 1,
lambda = cv_lasso_secondary$lambda.min)
secondary_index_test <- lasso_model_secondary %>% predict(newx = X_secondary[inds_test,])
## add to the dataset
dat_test <- dat_cc[inds_test,]
dat_test$Primary_index  <- primary_index_test
dat_test$Secondary_index  <- secondary_index_test
dat_test$Sex <- dat_test$Gender
head(dat_test)
n <- 10000
dat <- cbind(ID = paste0("person_", 1:n),
Sex = sample(c("Male", "Female"), size = n, replace = TRUE))
n <- 10000
dat <- cbind(ID = paste0("person_", 1:n),
Sex = sample(c("Male", "Female"), size = n, replace = TRUE))
dat$Primary_index <- rnorm(n, mean = 2 + ifelse(dat$Sex == "Male", 1, 0))
dat$Secondary_index <- rnorm(n, mean = 3 + ifelse(dat$Sex == "Male", 1.5, 0))
dat$Age <- runif(n, min = 20, max = 70)
n <- 10000
dat <- cbind(ID = paste0("person_", 1:n),
Sex = sample(c("Male", "Female"), size = n, replace = TRUE))
dat <- data.frame(ID = paste0("person_", 1:n),
Sex = sample(c("Male", "Female"), size = n, replace = TRUE))
dat$Primary_index <- rnorm(n, mean = 2 + ifelse(dat$Sex == "Male", 1, 0))
dat$Secondary_index <- rnorm(n, mean = 3 + ifelse(dat$Sex == "Male", 1.5, 0))
dat$Age <- runif(n, min = 20, max = 70)
head(dat)
table(dat$Sex)
write.csv(dat, file = "/Users/tamarsofer/Documents/GitHub/Figures_repository/Histograms/Histograms_sample_data_1.csv")
dat <- read.csv("/Users/tamarsofer/Library/CloudStorage/OneDrive-BethIsraelLaheyHealth/Ongoing_papers/2022_hypertension_gene_PRS/Data/phenotype/data_9cohort.csv")
dim(dat)
dat <- read.csv("/Users/tamarsofer/Library/CloudStorage/OneDrive-BethIsraelLaheyHealth/Projects/Sepsis/Datasets for Nate/RNA seq master file.csv")
dim(dat)
dat[1:4,1:4]
dat[57443,1]
knitr::opts_knit$set(root.dir = "/Users/tamarsofer/Dropbox (Partners HealthCare)/INCA_projects/Head_size_GWAS")
library(lme4)
library(lmerTest)
library(plyr)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(data.table)
library(haven)
setwd("/Users/tamarsofer/Dropbox (Partners HealthCare)/INCA_projects/Head_size_GWAS")
output_dir <- "/Users/tamarsofer/Dropbox (Partners HealthCare)/INCA_projects/Head_size_GWAS"
dat <- read.csv("Data/solbr_inca_v2_covariates_20221005.csv")#16415#2362 MRI data
household_ids <- read_sas("Data/household.sas7bdat")
setwd("/Users/tamarsofer/Dropbox (Partners HealthCare)/INCA_projects/Head_size_GWAS")
output_dir <- "/Users/tamarsofer/Dropbox (Partners HealthCare)/INCA_projects/Head_size_GWAS"
dat <- read.csv("Data/solbr_inca_v2_covariates_20221005.csv")#16415#2362 MRI data
household_ids <- read_sas("Data/household.sas7bdat")
household_ids <- read_sas("Data/household.sas7bdat")
household_ids$ID <- as.integer(household_ids$ID)
household_ids <- data.frame(household_ids)
dat <- merge(household_ids, dat, by ="ID")
nrow(dat)
piea <- read_sas("Data/piea_inv4.sas7bdat")
piea <- read_sas("Data/piea_inv4.sas7bdat")
piea <- piea[,c("ID", "PIEA22A", "PIEA23A")]
piea$maternal_edu <- piea$PIEA23A
piea$paternal_edu <- piea$PIEA22A
piea$ID <- sub("^0+", "", piea$ID)
dat <- merge(dat, piea[,c("ID", "maternal_edu", "paternal_edu")], by = "ID",all =  TRUE)
nrow(dat)
dup_id <- unique(dat$ID[which(duplicated(dat$ID))])
for (i in 1:length(dup_id)){
inds <- which(dat$ID == dup_id[i])
ind_sel <- which.min(dat$AGE_MRIV2[inds])
# if both ages are missing, choose the first row of data
if (length(ind_sel) == 0) ind_sel <- 1
dup_rm <- inds[-ind_sel]
dat <- dat[-dup_rm,]
}
dim(dat)
dat$GENDER <- as.factor(dat$GENDER)
dat$AGE_IMMI <- as.numeric(dat$AGE_IMMI)
dat$YRSUS <- as.numeric(dat$YRSUS)
dat$EDUCATION_C3 <- factor(dat$EDUCATION_C3, labels = c("<12", "12", ">12"))
dat$Occupation <- factor(dat$OCCUPATION_LONG,
labels = c("Non-skilled worker", "Service worker",
"Skilled worker", "Professional, administrative, office",
"Other"))
dat$US_BORN <- factor(dat$US_BORN,
labels = c("Not in mainland", "Born in mainland US"))
dat$Maternal_edu <- factor(dat$maternal_edu,
labels = c("no schooling", "primary", "middle", "highschool", "trade school", "college", "other"))
dat$Paternal_edu <- factor(dat$paternal_edu,
labels = c("no schooling", "primary", "middle", "highschool", "trade school", "college", "other"))
dat$HCHS_ID <- dat$ID
dim(dat)
dat <- dat[which(dat$CONSENT_MRI==1),]
table(dat$Maternal_edu)
table(dat$Paternal_edu)
table(dat$Maternal_edu)
table(dat$Paternal_edu)
dat$max_parents_edu <- pmax(dat$maternal_edu, dat$paternal_edu)
dat$Max_parents_edu <- factor(dat$paternal_edu,
labels = c("no schooling", "primary", "middle", "highschool", "trade school", "college", "other"))
dable(dat$Max_parents_edu)
table(dat$Max_parents_edu)
table(dat$Maternal_edu)
table(dat$Paternal_edu)
table(dat$Max_parents_edu)
dat$Max_parents_edu <- factor(dat$max_patrents_edu,
labels = c("no schooling", "primary", "middle", "highschool", "trade school", "college", "other"))
table(dat$maternal_edu)
table(dat$max_parents_edu)
dat$max_parents_edu <- pmax(dat$maternal_edu, dat$paternal_edu)
dat$Max_parents_edu <- factor(dat$max_parents_edu,
labels = c("no schooling", "primary", "middle", "highschool", "trade school", "college", "other"))
table(dat$Maternal_edu)
table(dat$Paternal_edu)
table(dat$Max_parents_edu)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/tamarsofer/Dropbox (Partners HealthCare)/INCA_projects/Head_size_GWAS")
dat$max_parent_edu_new_levels <- dat$max_parents_edu
dat$max_parent_edu_new_levels[which(is.element(dat$max_parents_edu, c(1,2,3)))] <- 1
dat$max_parent_edu_new_levels[which(is.element(dat$max_parents_edu, c(4,5)))] <- 2
dat$max_parent_edu_new_levels[which(is.element(dat$max_parents_edu, c(6)))] <- 3
table(dat$max_parent_edu_new_levels)
dat$max_parents_edu[which(dat$max_parents_edu == 7)] <- NA
table(dat$max_parent_edu_new_levels)
dat$max_parents_edu <- pmax(dat$maternal_edu, dat$paternal_edu)
dat$max_parents_edu[which(dat$max_parents_edu == 7)] <- NA
dat$max_parent_edu_new_levels <- dat$max_parents_edu
dat$max_parent_edu_new_levels[which(is.element(dat$max_parents_edu, c(1,2,3)))] <- 1
dat$max_parent_edu_new_levels[which(is.element(dat$max_parents_edu, c(4,5)))] <- 2
dat$max_parent_edu_new_levels[which(is.element(dat$max_parents_edu, c(6)))] <- 3
table(dat$max_parent_edu_new_levels)
dat$Max_parents_edu <- factor(dat$max_parents_edu_new_levels,
labels = c("Less than high school", "highschool or trade school",  "college"))
table(dat$max_parent_edu_new_levels)
table(factor(dat$max_parents_edu_new_levels))
table(dat$max_parent_edu_new_levels)
dat$Max_parents_edu <- factor(dat$max_parents_edu_new_levels,
levels = c(1,2,4),
labels = c("Less than high school", "highschool or trade school",  "college"))
dat$max_parents_edu_new_levels
dat$max_parent_edu_new_levels
dat$Max_parents_edu <- factor(dat$max_parent_edu_new_levels,
levels = c(1,2,3),
labels = c("Less than high school", "highschool or trade school",  "college"))
table(dat$Max_parents_edu)
head(dat)
piea <- read_sas("Data/piea_inv4.sas7bdat")
piea <- piea[,c("ID", "PIEA22A", "PIEA23A")]
piea$maternal_edu <- piea$PIEA23A
piea$paternal_edu <- piea$PIEA22A
piea$ID <- sub("^0+", "", piea$ID)
piea <- read_sas("Data/piea_inv4.sas7bdat")
piea <- piea[,c("ID", "PIEA22A", "PIEA23A")]
piea$maternal_edu <- piea$PIEA23A
piea$paternal_edu <- piea$PIEA22A
piea$ID <- sub("^0+", "", piea$ID)
piea$max_parents_edu <- pmax(piea$maternal_edu, piea$paternal_edu)
piea$max_parents_edu[which(piea$max_parents_edu == 7)] <- NA
piea$max_parent_edu_new_levels <- piea$max_parents_edu
piea$max_parent_edu_new_levels[which(is.element(piea$max_parents_edu, c(1,2,3)))] <- 1
piea$max_parent_edu_new_levels[which(is.element(piea$max_parents_edu, c(4,5)))] <- 2
piea$max_parent_edu_new_levels[which(is.element(piea$max_parents_edu, c(6)))] <- 3
table(piea$max_parent_edu_new_levels)
piea$Max_parents_edu <- factor(piea$max_parent_edu_new_levels,
levels = c(1,2,3),
labels = c("Less than high school", "highschool or trade school",  "college"))
table(piea$Max_parents_edu)
write.csv(piea, file = "Data/20230703_parents_education_measure.csv")
head(piea)
require(GWASTools)
require(gdsfmt)
require(dplyr)
require(GENESIS)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("GENESIS")
require(GWASTools)
require(gdsfmt)
require(dplyr)
require(GENESIS)
library(argparser)
library(data.table)
library(SeqArray)
library(SeqVarTools)
library(ggplot2)
library(survey)
